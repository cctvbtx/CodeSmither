<?xml version="1.0"?>
<!DOCTYPE service SYSTEM "./api-doc-source/api-doc.dtd">
<service name="检测APP 服务接口" basePath="http://192.168.1.207:8090/api/android.ashx">
    <description>
        接入简单、异常监控&#x000A; 完善的机制、丰富的接口
    </description>
    <module name="接口说明">
        <apidescription name="接口访问">
            本服务所有接口都已 Post 方式访问，发送的参数包括：头部（Header）,参数（Url）,实体（Body）。返回数据都是 Json格式
            
            &lt;b&gt;发送-头部（Header）&lt;/b&gt;：
                主要用于保持登录 的 token，作用在于当Cookie和Session失效之后，继续生成新的Cookie

            &lt;b&gt;发送-参数（Url）&lt;/b&gt;：
                目前用于发送分页参数 page（当前页数，0开始），pageSize（分页大小）
                例如：url?page=1&amp;pageSize=20

            &lt;b&gt;发送-实体（Body）&lt;/b&gt;：
                除了分页参数，一般其他数据都是以实体（Body）的Json格式发送，而且Json个最外层必须有 Signature 和 Param。
                Signature 用于登录验证的备用字段，目前无实际用处，如果没有登录直接使用空字符串“”，如果登录，就使用用户ID
                Param 才是发送参数的主要部分，具体内容根据具体接口来定。

            &lt;b&gt;返回-实体（Body）&lt;/b&gt;：Json
                最外层格式都有 ResultCode，Data，ErrorMsg
                ResultCode //0 表示成功 否则 Data 为null ErrorMsg 可以获取错误信息,
                Data //根据不同接口有不同的数据格式
                ErrorMsg //字符串格式，如：密码错误
        </apidescription>
        <apidescription name="登录保持">
            调用登录接口之后，服务器会返回一个 Set-Cookie ，客户端必须把 Cookie 保存下来，在之后的接口中发送到服务器，才能保持登录会话。

            由于 Cookie 和 Session 会在短时间内过期，客户端也必须保存下 服务站在登录接口中返回的 Token ，之后一起发送到服务器，
            可以在 Session 过期的时候继续创建新的 Cookie。
        </apidescription>
    </module>
    <module name="全局通用">
        <api name="用户登录" requestMethod="POST" path="?$c=Common&amp;$m=UserLogin$OPEN">
            <description>
                返回值中的token很重要，要保存下载，在登录之后的所有接口的头部都要加上这个参数
            </description>
            <!--<param name="UserNo" description="账户" type="string"/>-->
            <!--<param name="Password" description="密码（未加密）" type="string"/>-->
            <body contentType="Json">
                {
                "Signature":"" //登录用户ID,
                "Param":{
                UserNo:        //"账户",
                Password:      //"密码（未加密）"
                }
                }
            </body>
            <response contentType="Json">
                {
                    ResultCode:0 //0 表示成功 否则 Data 为null ErrorMsg 可以获取错误信息, 
                    ErrorMsg:"",
                    Data:{
                        String Id,
                        String Name,
                        int TitleCode,
                        int Status,
                        String HeadUrl,

                        String Token;           //要保存下载，在登录之后的所有接口的头部都要加上这个参数
                        String OrgId,
                        Authority{
                            boolean Collect;    //是否有收样的权限,
                            boolean Sample;     //是否有取样的权限,
                            boolean Witness;    //是否有见证的权限,
                            boolean Test;       //是否有测试的权限
                        }
                    }
                }
            </response>
        </api>
        <api name="图片上传" requestMethod="POST" path="?$c=Common&#38;$m=UploadImage">
            <header name="token" type="string" description="登录接口返回的Token，用于保持登录状态不过期"/>
            <param name="infoType" description="固定为“样品”" type="string"/>
            <param name="infoId" description="图片所属对象的ID" type="string"/>
            <body contentType="Multipart">
                图片二进制文件
            </body>
            <response contentType="Json">
                {
                ResultCode:0 //0 表示成功 否则 Data 为null ErrorMsg 可以获取错误信息, 
                ErrorMsg:"",
                Data:true
                }
            </response>
        </api>
        <api name="删除图片" requestMethod="POST" path="?$c=Common&#38;$m=DeleteImage">
            <header name="token" type="string" description="登录接口返回的Token，用于保持登录状态不过期"/>
            <param name="infoType" description="固定为“样品”" type="string"/>
            <param name="infoId" description="图片所属对象的ID" type="string"/>
            <description>用于部分图片上传失败而部分无法上传成功，并且用户选择取消提交任务的时候</description>
            <response contentType="Json">
                {
                ResultCode:0 //0 表示成功 否则 Data 为null ErrorMsg 可以获取错误信息, 
                ErrorMsg:"",
                Data:true
                }
            </response>
        </api>
    </module>
    <module name="取样模块">
        <api name="工程列表" requestMethod="POST" path="?$c=Base&amp;$m=GetProject">
            <header name="token" type="string" description="登录接口返回的Token，用于保持登录状态不过期"/>
            <param name="pageSize" description="分页大小" type="int"/>
            <param name="page" description="页数" type="int"/>
            <response contentType="Json">
                {
                ResultCode:0 //0 表示成功 否则 Data 为null ErrorMsg 可以获取错误信息, 
                ErrorMsg:"",
                Data:[{
                    String Id;//": "工程编号",
                    String Name;//":"工程名称",
                    String ChargePersonName;// ":"项目负责人姓名"
                }...]
                }
            </response>
        </api>
        <api name="专业项目" requestMethod="POST" path="?$c=Sample&amp;$m=GetTestItemList">
            <header name="token" type="string" description="登录接口返回的Token，用于保持登录状态不过期"/>
            <param name="name" type="string" nullable="true"/>
            <description>
                提取检测专业及检测项目
                注意：返回的数据是树形递归结构
            </description>
            <response contentType="Json">
                {
                ResultCode:0 //0 表示成功 否则 Data 为null ErrorMsg 可以获取错误信息, 
                ErrorMsg:"",
                Data:[{
                Code: "1",
                TestObjId :"",
                Item : [{"Code": "001","TestObjId": "水泥","item":[...]}]
                }...]
                }
            </response>
        </api>
        <api name="项目属性" requestMethod="POST" path="?$c=Sample&amp;$m=GetTestItemPropList">
            <header name="token" type="string" description="登录接口返回的Token，用于保持登录状态不过期"/>
            <description>
                提取检测项目属性，含初始值
            </description>
            <response contentType="Json">
                {
                ResultCode:0 //0 表示成功 否则 Data 为null ErrorMsg 可以获取错误信息, 
                ErrorMsg:"",
                Data:[{
                    Id://"属性Id",
                    AttributeName://"属性名称",
                    Type://"属性类型。可选值：1文本型，2日期型，3选项型",
                    IsRequired://是否必须,
                    AttributeFieldName://对应字段名,
                    Data:[{
                        "Id":值ID,"AttrValue":值
                },...]
                }...]
                }
            </response>
        </api>
        <api name="提交取样" requestMethod="POST" path="?$c=Sample&amp;$m=SubmitSampleData">
            <header name="token" type="string" description="登录接口返回的Token，用于保持登录状态不过期"/>
            <description>
                提取检测项目属性，含初始值
            </description>
            <body contentType="Json">
                {
                    "Signature":"" //登录用户ID,
                    "Param":{
                        PrjNo://"工程项目编号",
                        OrgNo://"使用机构编号",
                        UserNo://"使用人编号",
                        TypeCode = 1://"检验类别（试件来源）代码" 固定为1,
                        SamplePart://"工程部位",
                        ProCode://"专业序号",
                        ItemCode://"检测项目代码",
                        Remark://页面多余项

                        SampleData : [{ //样品信息
                            TagType:    //"标识类别代码",
                            TagNo:      //"标识编号",
                            SampleNo:   //"样品编号",
                            Lang:0.0f   //"使用地经度",
                            Lat:0.0f    //"使用地纬度",
                            Address:    //"使用地点",
                            ImageUrl1:  //"样品图片地址1",
                            ImageUrl2:  //"样品图片地址2",
                            ImageUrl3:  //"样品图片地址3"
                        }...]

                        SampleParam : [{ //样品信息
                            //动态内容，在 项目属性 接口中获得
                        }...]

                    }
                }
            </body>
            <response contentType="Json">
                {
                ResultCode:0 //0 表示成功 否则 Data 为null ErrorMsg 可以获取错误信息,
                ErrorMsg:"",
                Data:true
                }
            </response>
        </api>
        <api name="取样扫码" requestMethod="POST" path="?$c=Tag&amp;$m=ValidTagNo">
            <header name="token" type="string" description="登录接口返回的Token，用于保持登录状态不过期"/>
            <description>
                提取检测项目属性，含初始值
            </description>
            <body contentType="Json">
                {
                "Signature":"" //登录用户ID,
                "Param":{
                    Action:"取样" // 固定为 "取样",
                    TagNo:"" // 二维码扫描结果,
                }
                }
            </body>
            <response contentType="Json">
                {
                ResultCode:0 //0 表示成功 否则 Data 为null ErrorMsg 可以获取错误信息,
                ErrorMsg:"",
                Data:true
                }
            </response>
        </api>
    </module>
    <module name="收样模块">
        <api name="批量收样" requestMethod="POST" path="?$c=Sample&amp;$m=SubmitCollectData">
            <header name="token" type="string" description="登录接口返回的Token，用于保持登录状态不过期"/>
            <description>
                批量收样主要是批量扫描二维码（手机不做验证），然后批量提交到服务器（验证并记录），服务器将返回失败的条目，如果没有返回则全部成功
            </description>
            <body contentType="Json">
                {
                "Signature":"" //登录用户ID,
                "Param":{
                    TagType:    //"标识类别代码",
                    TagNo:      //"标识编号",
                    SampleNo:   //"样品编号",
                    Lang:0.0f   //"使用地经度",
                    Lat:0.0f    //"使用地纬度",
                    Address:    //"使用地点",
                    ImageUrl1:  //"样品图片地址1",
                    ImageUrl2:  //"样品图片地址2",
                    ImageUrl3:  //"样品图片地址3"
                }
                }
            </body>
            <response contentType="Json">
                {
                ResultCode:0 //0 表示成功 否则 Data 为null ErrorMsg 可以获取错误信息,
                ErrorMsg:"",
                Data:["",...] 失败的数据
                }
            </response>
        </api>
    </module>
</service>